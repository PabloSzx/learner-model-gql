// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id   Int       @id @default(autoincrement())
  uids UserUID[]

  enabled Boolean @default(true)

  email   String  @unique
  name    String?
  picture String?

  locked Boolean @default(false)

  active     Boolean   @default(false)
  lastOnline DateTime?

  role UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  groups Group[]

  projects Project[]

  @@unique([id, enabled])
}

model UserUID {
  uid String @id

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Group {
  id Int @id @default(autoincrement())

  code  String @unique
  label String

  users     User[]
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId Int?
}

model Project {
  id Int @id @default(autoincrement())

  code  String @unique
  label String

  users  User[]
  groups Group[]

  domains Domain[]
  topics  Topic[]
}

model Domain {
  id Int @id @default(autoincrement())

  code  String @unique
  label String

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  topics Topic[]


  @@index([id, projectId])
}

model Topic {
  id Int @id @default(autoincrement())

  code  String @unique
  label String

  domain   Domain @relation(fields: [domainId], references: [id])
  domainId Int

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  parent    Topic?  @relation("TopicToTopic", fields: [parentId], references: [id])
  parentId  Int?
  childrens Topic[] @relation("TopicToTopic")

  @@index([id, projectId])
}
