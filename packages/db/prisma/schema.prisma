// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id   Int       @id @default(autoincrement())
  uids UserUID[]

  enabled Boolean @default(true)

  email   String  @unique
  name    String?
  picture String?

  locked Boolean @default(false)

  active     Boolean   @default(false)
  lastOnline DateTime?

  role UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt


  Statement Statement[]


  groups Group[]



  @@unique([id, enabled])
}

model UserUID {
  uid String @id

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Group {
  id Int @id @default(autoincrement())

  users User[]

  Statement Statement[]
}

model Statement {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  group   Group? @relation(fields: [groupId], references: [id])
  groupId Int?

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  verb Verb @relation(fields: [verbId], references: [id])

  timestamp DateTime @default(now())

  stored DateTime @default(now())
  verbId Int
}

model Verb {
  id Int @id @default(autoincrement())

  uid String @unique

  Statement Statement[]
}

model Activity {
  id Int @id @default(autoincrement())

  uid String @unique

}

model Project {
  id Int @id @default(autoincrement())

  Statement Statement[]
}
