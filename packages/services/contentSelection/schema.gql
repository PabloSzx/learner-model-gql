schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

"Pagination Interface"
interface Connection {
  "Pagination information"
  pageInfo: PageInfo!
}

"Content entity"
type Content {
  "Unique numeric identifier"
  id: IntID!
}

"Return selected content and properties for further analysis (model, codes of content, probabilities and tables)"
type ContentSelectedPropsReturn {
  "All code of contents of last N contents done"
  PU: [String]
  "Content selected for learner"
  contentResult: [ContentsSelectedReturn!]!
  "Model structure of learner composed for KC level and KC threshold"
  model: JSON!
  "All codes of contents without last N contents and content dominated"
  newP: [String]
  "All codes of contents of topic chapters"
  oldP: [String]
  "Probability of success by average"
  pAVGdif: Float!
  "Probability of success by average"
  pAVGsim: Float!
  "table of newP with TableReturn attributes"
  table: [TableReturn!]!
  "table filter with similarity less than 1 and difficulty less than difficulty of last content done (PU[0])"
  tableDifEasy: [TableReturn!]!
  "table filter with similarity less than 1 and difficulty greater than difficulty of last content done (PU[0])"
  tableDifHarder: [TableReturn!]!
  "table filter with similarity equals to 1"
  tableSim: [TableReturn!]!
}

"ContentSelection input data"
input ContentSelectionInput {
  "Discard last N contents done (optional in query), default N= 10"
  discardLast: Int! = 10
  "Domain identifier"
  domainId: IntID!
  "Project identifier"
  projectId: IntID!
  "Topic identifier"
  topicId: [IntID!]!
  "User identifier"
  userId: IntID!
  "Range Zone proximal development(ZPD) (optional in query), default [0.4,0.6]"
  zpdRange: [Float!] = [0.4, 0.6]
}

"ContentSelection Queries"
type ContentSelectionQueries {
  """
  Get all contentSelected properties associated with the specified ContentSelectionInput
  """
  contentSelected(input: ContentSelectionInput!): ContentSelectedPropsReturn!
}

"Main structure of content selected return"
type ContentsSelectedReturn {
  "Message associated to Content"
  Msg: String!
  "Order is 1 when Content is selected for easy criterion, 2 when Content is selected for similar criterion and 3 when Content is selected for hard criterion"
  Order: IntID!
  "Content P"
  P: Content!
  "Preferred is true when Content is the best option for learner, else false"
  Preferred: Boolean!
}

"""
Pagination parameters

Forward pagination parameters can't be mixed with Backward pagination parameters simultaneously

first & after => Forward Pagination

last & before => Backward Pagination
"""
input CursorConnectionArgs {
  """
  Set the minimum boundary

  Use the "endCursor" field of "pageInfo"
  """
  after: IntID
  """
  Set the maximum boundary

  Use the "startCursor" field of "pageInfo"
  """
  before: IntID
  """
  Set the limit of nodes to be fetched

  It can't be more than 50
  """
  first: NonNegativeInt
  """
  Set the limit of nodes to be fetched

  It can't be more than 50
  """
  last: NonNegativeInt
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

"""
ID that parses as non-negative integer, serializes to string, and can be passed as string or number
"""
scalar IntID

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  "Returns 'Hello World!'"
  hello: String!
}

"Minimum Entity Information"
interface Node {
  "Unique numeric identifier"
  id: IntID!
}

"""
Integers that will have a value of 0 or more.
"""
scalar NonNegativeInt

"Order ascendingly or descendingly"
enum ORDER_BY {
  ASC
  DESC
}

"Paginated related information"
type PageInfo {
  "Cursor parameter normally used for forward pagination"
  endCursor: String
  """
  Utility field that returns "true" if a next page can be fetched
  """
  hasNextPage: Boolean!
  """
  Utility field that returns "true" if a previous page can be fetched
  """
  hasPreviousPage: Boolean!
  "Cursor parameter normally used for backward pagination"
  startCursor: String
}

type Query {
  "ContentSelection Query"
  contentSelection: ContentSelectionQueries!
  "Returns 'Hello World!'"
  hello: String!
}

type Subscription {
  "Emits 'Hello World1', 'Hello World2', 'Hello World3', 'Hello World4' and 'Hello World5'"
  hello: String!
}

"Structure of TableReturn for check result of criterion and further analysis"
type TableReturn {
  "Code of content"
  contentCode: String
  "Value of difficulty of content"
  diff: Float
  "Probability of success by average of KCs levels of the Content"
  probSuccessAvg: Float
  "Probability of success by multiplication of KCs levels of the Content"
  probSuccessMult: Float
  "Value of similarity of content"
  sim: Float
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""
Represents NULL values
"""
scalar Void
